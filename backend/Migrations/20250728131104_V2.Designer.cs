// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebTemplate.Models;

#nullable disable

namespace WebTemplate.Migrations
{
    [DbContext(typeof(DjoleGrandContext))]
    [Migration("20250728131104_V2")]
    partial class V2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebTemplate.Models.Admin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Drzava")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pol")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("PostanskiBroj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Admini");
                });

            modelBuilder.Entity("WebTemplate.Models.Film", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reziser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slika")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zanr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Filmovi");
                });

            modelBuilder.Entity("WebTemplate.Models.Karta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("MusterijaID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjekcijaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MusterijaID");

                    b.HasIndex("ProjekcijaID");

                    b.ToTable("Karte");
                });

            modelBuilder.Entity("WebTemplate.Models.Musterija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Drzava")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pol")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("PostanskiBroj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Musterije");
                });

            modelBuilder.Entity("WebTemplate.Models.Ocena", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("FilmID")
                        .HasColumnType("int");

                    b.Property<string>("Komentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MusterijaID")
                        .HasColumnType("int");

                    b.Property<int>("Vrednost")
                        .HasColumnType("int");

                    b.Property<DateTime>("VremeKomentara")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("FilmID");

                    b.HasIndex("MusterijaID");

                    b.ToTable("Ocene");
                });

            modelBuilder.Entity("WebTemplate.Models.Projekcija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DatumProjekcije")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FilmID")
                        .HasColumnType("int");

                    b.Property<int?>("SalaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FilmID");

                    b.HasIndex("SalaID");

                    b.ToTable("Projekcije");
                });

            modelBuilder.Entity("WebTemplate.Models.Sala", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("WebTemplate.Models.Zaposleni", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Drzava")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pol")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("PostanskiBroj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Zaposleni");
                });

            modelBuilder.Entity("WebTemplate.Models.Karta", b =>
                {
                    b.HasOne("WebTemplate.Models.Musterija", "Musterija")
                        .WithMany("MusterijaKarta")
                        .HasForeignKey("MusterijaID");

                    b.HasOne("WebTemplate.Models.Projekcija", "Projekcija")
                        .WithMany("ProjekcijaKarta")
                        .HasForeignKey("ProjekcijaID");

                    b.Navigation("Musterija");

                    b.Navigation("Projekcija");
                });

            modelBuilder.Entity("WebTemplate.Models.Ocena", b =>
                {
                    b.HasOne("WebTemplate.Models.Film", "Film")
                        .WithMany("FilmOcena")
                        .HasForeignKey("FilmID");

                    b.HasOne("WebTemplate.Models.Musterija", "Musterija")
                        .WithMany("MusterijaOcena")
                        .HasForeignKey("MusterijaID");

                    b.Navigation("Film");

                    b.Navigation("Musterija");
                });

            modelBuilder.Entity("WebTemplate.Models.Projekcija", b =>
                {
                    b.HasOne("WebTemplate.Models.Film", "Film")
                        .WithMany("FilmProjekcija")
                        .HasForeignKey("FilmID");

                    b.HasOne("WebTemplate.Models.Sala", "Sala")
                        .WithMany("SalaProjekcija")
                        .HasForeignKey("SalaID");

                    b.Navigation("Film");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("WebTemplate.Models.Film", b =>
                {
                    b.Navigation("FilmOcena");

                    b.Navigation("FilmProjekcija");
                });

            modelBuilder.Entity("WebTemplate.Models.Musterija", b =>
                {
                    b.Navigation("MusterijaKarta");

                    b.Navigation("MusterijaOcena");
                });

            modelBuilder.Entity("WebTemplate.Models.Projekcija", b =>
                {
                    b.Navigation("ProjekcijaKarta");
                });

            modelBuilder.Entity("WebTemplate.Models.Sala", b =>
                {
                    b.Navigation("SalaProjekcija");
                });
#pragma warning restore 612, 618
        }
    }
}
